// task 2.7.1.

// функция принимает на вход целочисленную матрицу M (другими словами, просто двумерный целочисленный массив) размера
// rows×cols, и возвращает транспонированную матрицу MT
// итого на входе функции следующие аргументы:
// сама матрица - m (точнее указатель на матрицу)
// количество строк - rows
// количество колонок - cols
int** transpose(const int* const* m, unsigned rows, unsigned cols)
{
    int ** n = new int*[cols];  // выделяем память под массив указателей равный количеству колонок, т.к. речь идет про
                                // транспонированную матрицу, строки заменены колонками и наоборот
    n[0] = new int[rows*cols];  // выделяем память под значения массива равное произведению строк на колонки
    
    for(int i = 1;i != cols ;i++)  // цикл проходит по от 1 до количества колонок
    {n[i]=n[i-1]+rows;}  // записываем значение указателя первого элемента нового массива

    // таким образом мы получили массив указателей на начало каждой строки

  // следующий цикл проходит все значения нового двумерного массива (транспонированного) и записывает все значения
  // старого исходного двумерного массива
  for(int k=0;k<cols;k++){      // переходим по всем колонкам
      for(int q=0;q<rows;q++){  // переходим по каждом элементу строки
          n[k][q] = m[q][k];    // записываем значения в новый массив
      }
  }
    return n;  // возвращаем значения транспонированного массива
} 