// task 2.4.3.
int strstr(const char *text, const char *pattern)  //Функция strstr ищет первое вхождение подстроки (pattern) в строку (text)
{
   int cnt = 0;  // берем нулевой символ
    bool is_ok = false; // устанавливаем булевую переменную в Ложь - что говорит нам о том, что не найдено вхождение
    if(*pattern)  // если входной патерн существует, не пустой то мы начнем искать его вхождение

        do {  // Функция работает с помощью цикла do-while, т.к. как минимум одно прохождение без проверки условия

            // внутри цикла do-while вложен цикл while, который выполняется до тех пор пока текст не закончится или не
            // будет найден найден первый символ который находится в первом символе вложения
            while(text[cnt] && text[cnt] != *pattern) ++cnt; //ищет первый символ подстроки (pattern) в строке (text)
            // cnt - это адрес первого символа совпадения
            if(text[cnt]) {  //если текст не закончился и совпадение найдено по первому символу
                int i = 1;   //переменная указывающая на первое совпадение
                is_ok = true;  // устанавливаем флаг на - Истина, пока не завершим проверку следующих символов
                while(is_ok && pattern[i]) {  // этот цикл работает пока символы совпадают, и проверяет оставшиеся

                    //Затем она проверяет оставшуюся часть строки (text) на соответствие с оставшейся частью подстроки (pattern)
                    if(text[cnt + i] && text[cnt + i] == pattern[i])
                        ++i;  // переход к следующему символу, количество совпадений увеличено
                    else
                        is_ok = false;  //как только символы не совпали или текст закончился раньше - меняем на Ложь
                }
            }
        } while(!is_ok && text[++cnt]); //первая проверка условия цикла, вхождение не найдено и переходим к следующему
                                        // символу исходного текста, если он существует, т.к. текст не закончился

    else //если входной патерн пустой, то значит он в любом случае присутсвует в искомой строке
        is_ok = true;  // принимает значение - Истина, вхождение найдено
 
    return is_ok ? cnt : -1; //Если найдено - Истина и адрес первого символа совпадения,
                             // Если совпадение не найдено, функция возвращает -1.
}

/*
Функция strstr начинает поиск подстроки (pattern) в строке (text), сравнивая каждый символ строки (text) со строкой
подстроки (pattern). Если первый символ строки (text) совпадает с первым символом подстроки (pattern), то функция
проверяет оставшуюся часть строки (text) на соответствие со строкой подстроки (pattern). Если вся подстрока (pattern)
найдена в строке (text), то функция возвращает позицию, где начинается первое вхождение подстроки (pattern). Если
подстрока (pattern) не найдена в строке (text), то функция возвращает -1.

Функция работает с помощью цикла do-while. Внутри цикла она cначала ищет первый символ подстроки (pattern) в строке
(text). Затем она проверяет оставшуюся часть строки (text) на соответствие с оставшейся частью подстроки (pattern). Если
совпадение найдено, то функция возвращает позицию, где начинается первое вхождение подстроки (pattern). Если совпадение
не найдено, то цикл продолжается до тех пор, пока не будет найдено первое вхождение подстроки (pattern) или не будет
достигнут конец строки (text).

Функция возвращает -1 если подстрока (pattern) пустая, так как в этом случае подстрока может быть найдена в любой
позиции строки (text). Функция также использует флаг is_ok, который устанавливается в true, если подстрока (pattern)
найдена в строке (text), и в false в противном случае.

*/