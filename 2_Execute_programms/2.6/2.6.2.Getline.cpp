// task 2.6.2.
#include <iostream>  // подключаем библиотеку  подключает стандартную библиотеку ввода-вывода (iostream), которая
// содержит функции для работы с консольным вводом и выводом. Это необходимо для использования команд вывода на экран
// (например, std::cout) и ввода с клавиатуры (например, std::cin).

using namespace std; // Эта строка кода на языке C++ объявляет, что мы будем использовать пространство имен std
// (стандартное пространство имен), чтобы не писать каждый раз при вызове функций этого пространства имен (например,
// std::cout). Таким образом, мы можем использовать функции и объекты из стандартной библиотеки языка C++ без
// необходимости указывать их пространство имен каждый раз.

char *getline()  // создадим функции getline
{
  int i = 0;  // локальная переменная равная 0
  char c;  // локальная символьная переменная, предназначена для получения каждого символа исходной строки
  char * tmp = new char[1];  // указатель на массив из одного символа, массив в результате должен вернуть строку

  // цикл который используется функция cin.get(c) - считывает символ из стандартного ввода (обычно это клавиатура) и
  // сохраняет его в переменную "c". Функция cin.get() читает один символ из потока ввода и возвращает его, а также удаляет символ
  // перевода строки из буфера ввода, который остался после предыдущей операции ввода.
  // цикл будет считывать символы пока не дойдет до конца строки символа '\n'
  while (cin.get(c) && (c != '\n')) {
    i++;
    tmp[i-1] = c;  // сохраняем символ в первую ячейку временного массива
    char * new_tmp = new char[i+1];  // создаем новый массив с размером на один больше предыдущего

    // следующий цикл n от 0 до окончания размера старого массива, который перезаписывает все значения в новый массив
    for (int n=0;n<i;n++) new_tmp[n] = tmp[n];
    delete [] tmp;  // после перезаписи удаляет старый массив
    tmp = new_tmp;  // после удаления переопределяет старый массив
  }
  tmp[i] = '\0'; // окончание цикла говорит нам что строка закончилась, мы должны вернуть ее с символом окончания в
                 // конце массива
  return tmp;    // возвращаем всю строку с перезаписанным последним символом '\0' вместо '\n'
}